var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/ElasticsearchMetricReporterOption.html",[0,0.775,1,1.281]],["body/interfaces/ElasticsearchMetricReporterOption.html",[0,0.587,1,1.401,2,0.593,3,0.593,4,0.777,5,0.266,6,0.341,7,0.441,8,1.925,9,2.051,10,1.925,11,1.688,12,1.093,13,1.045,14,1.704,15,1.704,16,2.564,17,1.831,18,2.292,19,1.704,20,1.712,21,0.101,22,1.093,23,1.907,24,1.886,25,2.33,26,1.537,27,3.186,28,2.062,29,1.401,30,1.401,31,0.805,32,1.537,33,2.234,34,1.042,35,1.255,36,0.593,37,2.292,38,2.127,39,1.22,40,2.062,41,2.564,42,2.564,43,1.813,44,2.292,45,1.813,46,1.045,47,2.123,48,1.045,49,0.593,50,1.045,51,2.292,52,1.045,53,2.186,54,2.564,55,1.401,56,0.266,57,1.22,58,0.206,59,0.441,60,0.441,61,0.601,62,1.644,63,0.441,64,0.777,65,0.441,66,0.441,67,2.123,68,1.813,69,2.238,70,1.431,71,0.441,72,2.773,73,3.569,74,1.688,75,1.045,76,0.593,77,0.441,78,1.99,79,0.601,80,3.491,81,3.281,82,3.01,83,0.593,84,2.717,85,0.441,86,0.593,87,0.593,88,0.593,89,3.519,90,1.045,91,0.593,92,2.526,93,0.777,94,0.441,95,0.441,96,0.601,97,1.579,98,0.777,99,0.441,100,0.601,101,0.441,102,0.441,103,0.441,104,0.441,105,1.045,106,1.045,107,1.255,108,1.255,109,0.593,110,0.593,111,0.601,112,0.593,113,0.593,114,2.127,115,1.431,116,0.593,117,0.593,118,0.593,119,0.593,120,0.593,121,0.593,122,0.441,123,0.441,124,2.564,125,0.441,126,0.593,127,1.579,128,1.045,129,1.045,130,0.593,131,0.593,132,3.281,133,0.593,134,0.593,135,0.593,136,0.593,137,0.593,138,1.688,139,1.045,140,0.593,141,1.401,142,1.045,143,1.045,144,1.045,145,1.045,146,1.045,147,1.045,148,1.045,149,1.045,150,1.045,151,1.045,152,1.045,153,1.045,154,1.045,155,1.045,156,1.045,157,1.045,158,1.045,159,1.045,160,1.045,161,1.045,162,0.593,163,0.593,164,1.045,165,0.593,166,1.045,167,0.593,168,1.045,169,0.593,170,1.045,171,0.593,172,0.593,173,0.593,174,0.593,175,0.593,176,0.593,177,0.593,178,0.593,179,0.593,180,2.123,181,2.437,182,0.593,183,0.593,184,1.106,185,0.593,186,0.593,187,0.593,188,0.593,189,0.593,190,0.593,191,1.688,192,0.593,193,1.317,194,0.487,195,0.593,196,1.401,197,1.045,198,1.401,199,0.593,200,0.593,201,0.441,202,0.593,203,0.593,204,0.441,205,0.593,206,0.593,207,0.441,208,0.593,209,0.593,210,1.401,211,0.593,212,0.593,213,0.593,214,1.925,215,0.593,216,0.593,217,0.593,218,0.593,219,2.123,220,1.045,221,0.593,222,0.593,223,0.039,224,0.593,225,1.045,226,0.593,227,0.441,228,0.593,229,0.593,230,0.593,231,0.593,232,0.593,233,0.593,234,0.593,235,1.045,236,3.01,237,3.01,238,0.039,239,0.593,240,3.235,241,1.401,242,0.593,243,0.593,244,0.593,245,0.441,246,0.593,247,0.593,248,0.593,249,0.593,250,0.593,251,0.593,252,0.593,253,0.593,254,0.593,255,0.593,256,0.593,257,0.593,258,0.593,259,1.401,260,0.593,261,0.593,262,0.593,263,0.593,264,2.123,265,2.123,266,0.593,267,0.593,268,1.401,269,1.401,270,0.593,271,1.045,272,1.045,273,1.045,274,1.045,275,0.593,276,1.045,277,0.593,278,1.925,279,1.925,280,0.593,281,0.593,282,0.593,283,0.593,284,0.593,285,0.593,286,0.593,287,0.593,288,0.593,289,0.593,290,0.024]],["title/changelog.html",[58,0.663,291,1.095,292,1.417]],["body/changelog.html",[5,1.285,7,1.582,21,0.076,22,0.955,31,1.223,39,1.223,40,1.582,56,1.708,78,1.647,96,1.647,111,1.223,125,1.582,184,1.223,194,0.74,207,2.878,223,0.05,238,0.05,290,0.067,292,2.409,293,2.128,294,2.128,295,3.239,296,2.128,297,2.128,298,2.128,299,2.128,300,2.128,301,2.128,302,2.128,303,2.128,304,2.128,305,2.128,306,2.865,307,3.239,308,2.188,309,2.128,310,3.725,311,2.141,312,2.128,313,2.878,314,2.128,315,2.128,316,2.128,317,3.725,318,2.128,319,2.128,320,2.128,321,2.865,322,2.128,323,2.128,324,2.128,325,2.128,326,2.128,327,2.128,328,3.922,329,2.128,330,1.582,331,2.865,332,2.128,333,2.128,334,2.13,335,2.128,336,2.577,337,2.577,338,2.128,339,2.865,340,2.128,341,2.865,342,2.128,343,2.128,344,2.128,345,2.128,346,2.128,347,2.128,348,2.13,349,0.955,350,1.582,351,1.582,352,1.582,353,1.582,354,3.239,355,2.128,356,2.128,357,2.128,358,2.128,359,2.128,360,2.128,361,2.128,362,2.128,363,2.128,364,2.128,365,2.128,366,2.128,367,2.128,368,2.128,369,2.128,370,3.465,371,3.239,372,2.128,373,2.128,374,2.128,375,1.223,376,2.128,377,2.128,378,2.128,379,2.128,380,2.128,381,2.128,382,2.128,383,2.128,384,2.128,385,2.865,386,1.582,387,2.128,388,2.128,389,2.128,390,1.223,391,1.223,392,2.13,393,2.128,394,2.128,395,2.128,396,2.128,397,2.128,398,2.128,399,2.128,400,2.128,401,0.955,402,2.128,403,2.128,404,2.128,405,2.128,406,2.128,407,2.128]],["title/coverage.html",[401,1.326]],["body/coverage.html",[0,1.093,1,1.807,5,1.41,6,2.104,9,1.807,20,1.41,21,0.093,79,1.807,194,1.093,223,0.073,238,0.073,290,0.085,375,1.807,401,1.41,408,3.143,409,2.337,410,3.661,411,3.143,412,3.143,413,2.337,414,2.337]],["title/dependencies.html",[311,1.527,415,1.906]],["body/dependencies.html",[4,2.349,21,0.096,22,1.417,35,2.349,56,1.647,57,2.11,223,0.074,238,0.074,290,0.086,311,2.11,330,2.349,334,2.349,416,3.159,417,3.159,418,3.159,419,3.159]],["title/index.html",[12,0.855,58,0.663,291,1.095]],["body/index.html",[9,2.123,12,1.069,14,2.547,15,1.772,17,1.774,19,2.547,20,1.261,21,0.1,22,1.756,23,1.216,24,1.369,25,1.216,26,1.615,28,1.216,31,1.615,32,1.369,33,2.123,34,2.747,38,1.772,43,2.629,45,2.09,53,2.296,56,1.657,57,2.032,61,1.369,62,1.369,68,2.296,69,2.09,70,1.772,78,1.369,84,2.09,85,1.772,92,2.95,93,1.772,94,1.216,95,1.216,96,1.369,97,1.772,98,1.772,99,1.216,100,0.94,101,1.216,102,1.216,103,1.216,104,1.216,107,1.772,108,2.09,111,2.082,114,1.772,115,1.216,122,1.216,123,1.216,127,1.216,184,0.94,194,1.141,204,1.216,223,0.038,227,1.216,238,0.038,290,0.056,308,0.94,336,1.216,337,2.09,348,1.216,349,1.069,350,1.216,351,1.216,352,1.216,353,1.216,386,1.772,390,0.94,392,1.216,420,1.636,421,1.636,422,1.636,423,1.636,424,1.636,425,1.636,426,1.636,427,2.382,428,1.636,429,1.636,430,1.636,431,1.636,432,1.636,433,1.636,434,1.636,435,2.382,436,1.636,437,1.636,438,1.636,439,1.636,440,1.636,441,2.382,442,2.382,443,1.636,444,2.382,445,1.636,446,1.636,447,1.636,448,2.382,449,1.636,450,3.753,451,3.623,452,1.636,453,1.636,454,1.636,455,2.382,456,1.636,457,2.81,458,2.81,459,1.636,460,1.636,461,1.636,462,2.81,463,2.81,464,1.636,465,1.636,466,1.636,467,1.636,468,1.636,469,1.636,470,1.636,471,1.636,472,1.636,473,1.636,474,1.636,475,1.636,476,1.636,477,1.636,478,3.425,479,1.636,480,1.636,481,1.636,482,1.636,483,1.636,484,1.636]],["title/license.html",[58,0.663,291,1.095,391,1.095]],["body/license.html",[21,0.078,39,1.536,77,1.988,223,0.062,238,0.062,245,1.988,290,0.078,308,1.909,313,1.988,375,1.536,390,1.536,391,1.536,485,3.613,486,3.321,487,2.673,488,2.673,489,2.673,490,2.673,491,2.673,492,2.673,493,3.321,494,4.092,495,2.673,496,2.673,497,2.673,498,3.613,499,2.673,500,3.321,501,2.673,502,2.673,503,2.673,504,2.673,505,2.673,506,2.673,507,2.673,508,2.673,509,3.321,510,2.673,511,2.673,512,2.673,513,2.673,514,2.673,515,2.673,516,2.673,517,3.321,518,3.321,519,2.673,520,2.673,521,2.673,522,2.673,523,2.673,524,2.673,525,2.673,526,2.673,527,2.673,528,2.673,529,2.673,530,2.673,531,2.673,532,2.673,533,2.673,534,2.673,535,2.673,536,2.673,537,2.673,538,2.673,539,2.673,540,2.673,541,2.673,542,2.673,543,2.673,544,2.673,545,2.673,546,2.673,547,2.673,548,2.673]],["title/modules.html",[549,2.197]],["body/modules.html",[21,0.088,223,0.077,238,0.077,290,0.088,549,2.461]],["title/overview.html",[550,2.197]],["body/overview.html",[0,1.139,21,0.088,79,1.882,100,2.155,223,0.076,238,0.076,290,0.088,550,2.435]],["title/miscellaneous/typealiases.html",[551,1.417,552,2.657]],["body/miscellaneous/typealiases.html",[0,1.255,6,1.762,12,1.619,17,2.074,20,1.619,21,0.084,24,2.074,26,1.762,32,1.762,33,2.074,58,1.067,59,2.28,60,2.28,61,1.762,62,1.762,63,2.28,64,2.28,65,2.28,66,2.28,71,2.28,201,2.683,223,0.072,238,0.072,290,0.084,551,2.28,553,3.066,554,3.608]],["title/unit-test.html",[193,1.387,349,1.082]],["body/unit-test.html",[5,1.446,21,0.087,193,1.853,194,1.122,223,0.075,238,0.075,290,0.087,349,1.446,401,1.446,409,2.398,413,2.398,414,2.398,555,3.224,556,3.224,557,3.224]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{}}}],["0",{"_index":97,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["0.5.10",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["01",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":307,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":100,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["1.16.x",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["1.17.2",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":96,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"index.html":{}}}],["100",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":192,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["11",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["15.4.1",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["2.0.0",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":304,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":313,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["25/25",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["3.3.4",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["6.0",{"_index":432,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["_index",{"_index":274,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["_type",{"_index":276,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["above",{"_index":516,"title":{},"body":{"license.html":{}}}],["action",{"_index":541,"title":{},"body":{"license.html":{}}}],["adapted",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":435,"title":{},"body":{"index.html":{}}}],["added",{"_index":328,"title":{},"body":{"changelog.html":{}}}],["adheres",{"_index":300,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":553,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":507,"title":{},"body":{"license.html":{}}}],["apiversion",{"_index":431,"title":{},"body":{"index.html":{}}}],["arguments",{"_index":279,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["arising",{"_index":545,"title":{},"body":{"license.html":{}}}],["array",{"_index":237,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["associated",{"_index":495,"title":{},"body":{"license.html":{}}}],["async",{"_index":220,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["authors",{"_index":534,"title":{},"body":{"license.html":{}}}],["await",{"_index":227,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["based",{"_index":298,"title":{},"body":{"changelog.html":{}}}],["basename",{"_index":90,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["basic",{"_index":392,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["body",{"_index":241,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["body.length",{"_index":247,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["boots",{"_index":453,"title":{},"body":{"index.html":{}}}],["branches",{"_index":555,"title":{},"body":{"unit-test.html":{}}}],["build",{"_index":31,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"index.html":{}}}],["builder",{"_index":447,"title":{},"body":{"index.html":{}}}],["building",{"_index":71,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"miscellaneous/typealiases.html":{}}}],["buildrun",{"_index":476,"title":{},"body":{"index.html":{}}}],["builds",{"_index":105,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["bulk",{"_index":234,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["c",{"_index":245,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"license.html":{}}}],["calls",{"_index":278,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["catch((reason",{"_index":256,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["certain",{"_index":59,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"miscellaneous/typealiases.html":{}}}],["chai",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":207,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{}}}],["changelog",{"_index":292,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":294,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":490,"title":{},"body":{"license.html":{}}}],["claim",{"_index":537,"title":{},"body":{"license.html":{}}}],["class",{"_index":79,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":23,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["client(clientoptions",{"_index":212,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["clientoptions",{"_index":14,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["clock",{"_index":37,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["cluster",{"_index":233,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["code",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["combinations",{"_index":232,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["combined",{"_index":110,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["commit",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":208,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["commontags",{"_index":444,"title":{},"body":{"index.html":{}}}],["compile",{"_index":348,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compodoc",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["components",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["compose",{"_index":451,"title":{},"body":{"index.html":{}}}],["computes",{"_index":439,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":515,"title":{},"body":{"license.html":{}}}],["config",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["configoptions",{"_index":19,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["configuration",{"_index":263,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["connection",{"_index":547,"title":{},"body":{"license.html":{}}}],["console",{"_index":190,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["const",{"_index":92,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["constructor",{"_index":186,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["contract",{"_index":542,"title":{},"body":{"license.html":{}}}],["copies",{"_index":509,"title":{},"body":{"license.html":{}}}],["copy",{"_index":493,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":485,"title":{},"body":{"license.html":{}}}],["corner",{"_index":467,"title":{},"body":{"index.html":{}}}],["count",{"_index":127,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["counter",{"_index":38,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["counter.getcount",{"_index":128,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["counters",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":401,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"unit-test.html":{}}}],["creates",{"_index":185,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["ctx",{"_index":240,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["ctx.date",{"_index":269,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["ctx.registry",{"_index":267,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["ctx.type",{"_index":268,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["current",{"_index":200,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["dailyindex(basename",{"_index":91,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["damages",{"_index":538,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":458,"title":{},"body":{"index.html":{}}}],["data",{"_index":462,"title":{},"body":{"index.html":{}}}],["date",{"_index":69,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["date.getdate",{"_index":94,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["date.getfullyear",{"_index":102,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["date.getmonth",{"_index":99,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["day",{"_index":93,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["dayprefix",{"_index":95,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["dayprefix}${day",{"_index":104,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["dd",{"_index":88,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["deal",{"_index":497,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":548,"title":{},"body":{"license.html":{}}}],["defaultdocumentbuilder",{"_index":113,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["defaulttypedeterminator",{"_index":83,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["dependencies",{"_index":311,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["dependency",{"_index":331,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{}}}],["determine",{"_index":199,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["dev",{"_index":448,"title":{},"body":{"index.html":{}}}],["different",{"_index":351,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["directly",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":473,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":505,"title":{},"body":{"license.html":{}}}],["docker",{"_index":450,"title":{},"body":{"index.html":{}}}],["document",{"_index":32,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["document's",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":375,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":296,"title":{},"body":{"changelog.html":{}}}],["documents",{"_index":443,"title":{},"body":{"index.html":{}}}],["e.g",{"_index":65,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"miscellaneous/typealiases.html":{}}}],["editorconfig",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["elasticsearch",{"_index":22,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["elasticsearchmetricreporter",{"_index":9,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"coverage.html":{},"index.html":{}}}],["elasticsearchmetricreporter.dailyindex(\"metric",{"_index":188,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["elasticsearchmetricreporter.defaultdocumentbuilder",{"_index":187,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["elasticsearchmetricreporter.defaulttypedeterminator",{"_index":189,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["elasticsearchmetricreporter.getcountervalues(metric",{"_index":117,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["elasticsearchmetricreporter.getgaugevalue(metric",{"_index":121,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["elasticsearchmetricreporter.gethistogramvalues(metric",{"_index":118,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["elasticsearchmetricreporter.getmetervalues(metric",{"_index":119,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["elasticsearchmetricreporter.getmonotonecountervalues(metric",{"_index":116,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["elasticsearchmetricreporter.gettimervalues(metric",{"_index":120,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["elasticsearchmetricreporteroption",{"_index":1,"title":{"interfaces/ElasticsearchMetricReporterOption.html":{}},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"coverage.html":{}}}],["emtric",{"_index":63,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"miscellaneous/typealiases.html":{}}}],["env/boot.sh",{"_index":459,"title":{},"body":{"index.html":{}}}],["error(`error",{"_index":257,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["errors",{"_index":30,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["es2017",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":66,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"miscellaneous/typealiases.html":{}}}],["event",{"_index":39,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"license.html":{}}}],["event.gettime",{"_index":225,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["events",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":457,"title":{},"body":{"index.html":{}}}],["examples",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":67,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["express",{"_index":525,"title":{},"body":{"license.html":{}}}],["extends",{"_index":10,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["extension",{"_index":76,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"coverage.html":{},"unit-test.html":{}}}],["files",{"_index":496,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":530,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["flushevents",{"_index":230,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["following",{"_index":514,"title":{},"body":{"license.html":{}}}],["format",{"_index":297,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":489,"title":{},"body":{"license.html":{}}}],["function",{"_index":201,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":556,"title":{},"body":{"unit-test.html":{}}}],["furnished",{"_index":512,"title":{},"body":{"license.html":{}}}],["gauge",{"_index":40,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{}}}],["gauge.getvalue",{"_index":133,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["generalized",{"_index":260,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["generator",{"_index":440,"title":{},"body":{"index.html":{}}}],["getcountervalues(counter",{"_index":130,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["getgaugevalue(gauge",{"_index":131,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["gethistogramvalues(histogram",{"_index":136,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["getlog",{"_index":213,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["getmetervalues(meter",{"_index":162,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["getmonotonecountervalues(counter",{"_index":126,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["getnumber(value",{"_index":182,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["gets",{"_index":124,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["gettimervalues(timer",{"_index":172,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["getting",{"_index":58,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"miscellaneous/typealiases.html":{}}}],["grafana",{"_index":455,"title":{},"body":{"index.html":{}}}],["granted",{"_index":488,"title":{},"body":{"license.html":{}}}],["group",{"_index":107,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["handleresults",{"_index":239,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["hereby",{"_index":487,"title":{},"body":{"license.html":{}}}],["histogram",{"_index":41,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["histogram.getcount",{"_index":137,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["histogram.getsnapshot",{"_index":140,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["holders",{"_index":535,"title":{},"body":{"license.html":{}}}],["home",{"_index":468,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":433,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":464,"title":{},"body":{"index.html":{}}}],["http://localhost:5601",{"_index":471,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["images",{"_index":475,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":526,"title":{},"body":{"license.html":{}}}],["import",{"_index":34,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["included",{"_index":519,"title":{},"body":{"license.html":{}}}],["including",{"_index":500,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["indexname",{"_index":85,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["indexnamedeterminator",{"_index":15,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["information",{"_index":60,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"miscellaneous/typealiases.html":{}}}],["initial",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["inspector",{"_index":56,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["install",{"_index":427,"title":{},"body":{"index.html":{}}}],["installed",{"_index":452,"title":{},"body":{"index.html":{}}}],["instance",{"_index":28,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["instanceof",{"_index":115,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["instances",{"_index":262,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["instancing",{"_index":442,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ElasticsearchMetricReporterOption.html":{}},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["interval",{"_index":197,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["isnan(count",{"_index":129,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["isnan(value",{"_index":138,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["it's",{"_index":206,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["jenkins",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["jenkinsfile",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":426,"title":{},"body":{"index.html":{}}}],["jsdocs",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["keep",{"_index":299,"title":{},"body":{"changelog.html":{}}}],["kibana",{"_index":470,"title":{},"body":{"index.html":{}}}],["kind",{"_index":524,"title":{},"body":{"license.html":{}}}],["left",{"_index":466,"title":{},"body":{"index.html":{}}}],["liability",{"_index":539,"title":{},"body":{"license.html":{}}}],["liable",{"_index":536,"title":{},"body":{"license.html":{}}}],["lib/.../elasticsearchmetricreporter.ts",{"_index":554,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/metrics/elasticsearchmetricreporter.ts",{"_index":6,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["library",{"_index":420,"title":{},"body":{"index.html":{}}}],["license",{"_index":391,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{}}}],["licensed",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":501,"title":{},"body":{"license.html":{}}}],["limited",{"_index":527,"title":{},"body":{"license.html":{}}}],["line:variable",{"_index":273,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["lines",{"_index":557,"title":{},"body":{"unit-test.html":{}}}],["link",{"_index":72,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["lint",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":474,"title":{},"body":{"index.html":{}}}],["localhost:9200",{"_index":434,"title":{},"body":{"index.html":{}}}],["log",{"_index":16,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["logger",{"_index":27,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["logmetadata",{"_index":183,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["made",{"_index":421,"title":{},"body":{"index.html":{}}}],["map",{"_index":35,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"dependencies.html":{}}}],["map((result",{"_index":242,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["matching",{"_index":290,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{}}}],["meant",{"_index":423,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":73,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["merchantability",{"_index":529,"title":{},"body":{"license.html":{}}}],["merge",{"_index":504,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":64,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"miscellaneous/typealiases.html":{}}}],["meter",{"_index":42,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["meter.getcount",{"_index":163,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["method",{"_index":235,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["metric",{"_index":33,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["metric.getcount",{"_index":445,"title":{},"body":{"index.html":{}}}],["metric.getgroup",{"_index":123,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["metric.getname",{"_index":122,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["metricdocumentbuilder",{"_index":17,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["metricinfodeterminator",{"_index":24,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["metriclogger",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["metricregistry",{"_index":43,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["metricreporter",{"_index":75,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["metrics",{"_index":57,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"dependencies.html":{},"index.html":{}}}],["metrics@1.11.0",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["metrics@1.13.0",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["metrics@1.16.0",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["metrics@1.16.x",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["metrics@1.17.2",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["metrics@1.8.3",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["metrics@1.8.7",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["metricsetreportcontext",{"_index":44,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["metrictype",{"_index":45,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["millisecond",{"_index":46,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["minreportingtimeout",{"_index":196,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["miscellaneous",{"_index":551,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mit",{"_index":390,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["mm",{"_index":87,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["mocha",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":503,"title":{},"body":{"license.html":{}}}],["module",{"_index":422,"title":{},"body":{"index.html":{}}}],["modules",{"_index":549,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monotone",{"_index":125,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{}}}],["monotonecounter",{"_index":47,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["month",{"_index":98,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["monthprefix",{"_index":101,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["monthprefix}${month",{"_index":103,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["name",{"_index":26,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["navigate",{"_index":463,"title":{},"body":{"index.html":{}}}],["need",{"_index":449,"title":{},"body":{"index.html":{}}}],["needs",{"_index":441,"title":{},"body":{"index.html":{}}}],["new",{"_index":194,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"unit-test.html":{}}}],["next",{"_index":272,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["node",{"_index":352,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["node10",{"_index":483,"title":{},"body":{"index.html":{}}}],["node11license",{"_index":484,"title":{},"body":{"index.html":{}}}],["node6",{"_index":479,"title":{},"body":{"index.html":{}}}],["node7",{"_index":480,"title":{},"body":{"index.html":{}}}],["node8",{"_index":481,"title":{},"body":{"index.html":{}}}],["node9",{"_index":482,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":336,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nodejs.it",{"_index":424,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":533,"title":{},"body":{"license.html":{}}}],["notable",{"_index":293,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":229,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["notice",{"_index":517,"title":{},"body":{"license.html":{}}}],["now",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":428,"title":{},"body":{"index.html":{}}}],["null",{"_index":114,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["number",{"_index":181,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["number.isnan(value",{"_index":134,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["nyc",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":106,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["objects",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":492,"title":{},"body":{"license.html":{}}}],["options",{"_index":8,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["otherwise",{"_index":544,"title":{},"body":{"license.html":{}}}],["out",{"_index":546,"title":{},"body":{"license.html":{}}}],["overallctx",{"_index":226,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["overallreportcontext",{"_index":48,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["overview",{"_index":550,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.concat(c",{"_index":246,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["package",{"_index":415,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":89,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["parameter",{"_index":109,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["particular",{"_index":531,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":472,"title":{},"body":{"index.html":{}}}],["peer",{"_index":330,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["permission",{"_index":486,"title":{},"body":{"license.html":{}}}],["permit",{"_index":510,"title":{},"body":{"license.html":{}}}],["person",{"_index":491,"title":{},"body":{"license.html":{}}}],["persons",{"_index":511,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["playground",{"_index":337,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["playground.shview",{"_index":461,"title":{},"body":{"index.html":{}}}],["portions",{"_index":521,"title":{},"body":{"license.html":{}}}],["private",{"_index":180,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["project",{"_index":295,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":219,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["promise.resolve",{"_index":248,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["property",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":236,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["provided",{"_index":522,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":456,"title":{},"body":{"index.html":{}}}],["public",{"_index":82,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["publish",{"_index":77,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"license.html":{}}}],["published",{"_index":446,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":532,"title":{},"body":{"license.html":{}}}],["readme",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reason",{"_index":259,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reduce((p",{"_index":244,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["refactored",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["registry",{"_index":68,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["removed",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["report",{"_index":29,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reportcounter",{"_index":280,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reported",{"_index":204,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["reporter",{"_index":111,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"index.html":{}}}],["reporter.addmetricregistry(registry",{"_index":436,"title":{},"body":{"index.html":{}}}],["reporter.start();determine",{"_index":438,"title":{},"body":{"index.html":{}}}],["reportevent>(event",{"_index":221,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reportgauge(gauge",{"_index":282,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reporthistogram(histogram",{"_index":284,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reporting",{"_index":184,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"index.html":{}}}],["reportingcontext",{"_index":264,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reportingresult",{"_index":49,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reportinterval",{"_index":191,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reportmeter(meter",{"_index":286,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reportmetric",{"_index":265,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reports",{"_index":218,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["reporttimer(timer",{"_index":288,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["response.errors",{"_index":255,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["response.took}ms",{"_index":253,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["restriction",{"_index":499,"title":{},"body":{"license.html":{}}}],["result",{"_index":223,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{}}}],["result.result",{"_index":243,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["resulting",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["results",{"_index":238,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"unit-test.html":{}}}],["return",{"_index":84,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["returns",{"_index":80,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["rights",{"_index":502,"title":{},"body":{"license.html":{}}}],["run",{"_index":478,"title":{},"body":{"index.html":{}}}],["running",{"_index":460,"title":{},"body":{"index.html":{}}}],["save",{"_index":429,"title":{},"body":{"index.html":{}}}],["scheduledmetricreporter",{"_index":50,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["scheduledmetricreporteroptions",{"_index":11,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["scheduler",{"_index":51,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["script",{"_index":350,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scripts",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":508,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":301,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":231,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["services",{"_index":454,"title":{},"body":{"index.html":{}}}],["set",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["setinterval",{"_index":195,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["setlog(log",{"_index":216,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["sets",{"_index":215,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["setup",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":518,"title":{},"body":{"license.html":{}}}],["sinon",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["snapshot",{"_index":139,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["software",{"_index":494,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"dependencies.html":{}}}],["specifed",{"_index":179,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["specific",{"_index":112,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["specified",{"_index":62,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["start",{"_index":437,"title":{},"body":{"index.html":{}}}],["started",{"_index":291,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":409,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["static",{"_index":81,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["stdclock",{"_index":52,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["stream",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":70,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["subject",{"_index":513,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":506,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":520,"title":{},"body":{"license.html":{}}}],["super",{"_index":209,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["support",{"_index":334,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["support/register",{"_index":36,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["table",{"_index":414,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":413,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tags",{"_index":53,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["target",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":349,"title":{"unit-test.html":{}},"body":{"changelog.html":{},"index.html":{},"unit-test.html":{}}}],["testing",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":477,"title":{},"body":{"index.html":{}}}],["tevent",{"_index":222,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["then((response",{"_index":250,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.buildtags(ctx.registry",{"_index":270,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.client",{"_index":211,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.client.bulk",{"_index":249,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(meter.get15minuterate",{"_index":165,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(meter.get1minuterate",{"_index":167,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(meter.get5minuterate",{"_index":169,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(meter.getmeanrate",{"_index":171,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.get75thpercentile",{"_index":151,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.get95thpercentile",{"_index":153,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.get98thpercentile",{"_index":155,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.get999thpercentile",{"_index":159,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.get99thpercentile",{"_index":157,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.getmax",{"_index":143,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.getmean",{"_index":145,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.getmedian",{"_index":149,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.getmin",{"_index":147,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(snapshot.getstddev",{"_index":161,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(timer.get15minuterate",{"_index":175,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(timer.get1minuterate",{"_index":176,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(timer.get5minuterate",{"_index":177,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.getnumber(timer.getmeanrate",{"_index":178,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.handleresults(null",{"_index":228,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.logmetadata",{"_index":210,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.options.indexnamedeterminator(ctx.registry",{"_index":275,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.options.log",{"_index":214,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.options.log.debug",{"_index":251,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.options.metricdocumentbuilder",{"_index":266,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.options.typedeterminator(ctx.registry",{"_index":277,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.reportgauge(event",{"_index":224,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.reportmetric(counter",{"_index":281,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.reportmetric(gauge",{"_index":283,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.reportmetric(histogram",{"_index":285,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.reportmetric(meter",{"_index":287,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["this.reportmetric(timer",{"_index":289,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["time",{"_index":198,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["timeout",{"_index":203,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["timer",{"_index":54,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["timer.getcount",{"_index":173,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["timer.getsnapshot",{"_index":174,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["timestamp",{"_index":108,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["timeunit",{"_index":55,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["took",{"_index":252,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["tool",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":543,"title":{},"body":{"license.html":{}}}],["transitive",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["travis.yml",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":202,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["tslint:disable",{"_index":271,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["type",{"_index":20,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":552,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedeterminator",{"_index":18,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["typeof",{"_index":135,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["types",{"_index":261,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["typescript",{"_index":386,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["under",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":193,"title":{"unit-test.html":{}},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"unit-test.html":{}}}],["unreleased",{"_index":303,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":465,"title":{},"body":{"index.html":{}}}],["usage",{"_index":430,"title":{},"body":{"index.html":{}}}],["use",{"_index":308,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":25,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{}}}],["uses",{"_index":425,"title":{},"body":{"index.html":{}}}],["using",{"_index":61,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["value",{"_index":132,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values",{"_index":78,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{},"changelog.html":{},"index.html":{}}}],["values[`count",{"_index":141,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`m15_rate",{"_index":164,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`m1_rate",{"_index":166,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`m5_rate",{"_index":168,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`max",{"_index":142,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`mean",{"_index":144,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`mean_rate",{"_index":170,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`min",{"_index":146,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`p50",{"_index":148,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`p75",{"_index":150,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`p95",{"_index":152,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`p98",{"_index":154,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`p99",{"_index":156,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`p999",{"_index":158,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["values[`stddev",{"_index":160,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["version",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["versioning",{"_index":302,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":353,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["view",{"_index":469,"title":{},"body":{"index.html":{}}}],["void",{"_index":217,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["warranties",{"_index":528,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":523,"title":{},"body":{"license.html":{}}}],["wether",{"_index":205,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["whether",{"_index":540,"title":{},"body":{"license.html":{}}}],["without",{"_index":498,"title":{},"body":{"license.html":{}}}],["write",{"_index":254,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["writing",{"_index":258,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}],["yyyy",{"_index":86,"title":{},"body":{"interfaces/ElasticsearchMetricReporterOption.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ElasticsearchMetricReporterOption.html":{"url":"interfaces/ElasticsearchMetricReporterOption.html","title":"interface - ElasticsearchMetricReporterOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ElasticsearchMetricReporterOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/metrics/ElasticsearchMetricReporter.ts\n        \n\n            \n                Description\n            \n            \n                Options for ElasticsearchMetricReporter.\n\n            \n\n            \n                Extends\n            \n            \n                    ScheduledMetricReporterOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientOptions\n                                \n                                \n                                        indexnameDeterminator\n                                \n                                \n                                        log\n                                \n                                \n                                        metricDocumentBuilder\n                                \n                                \n                                        typeDeterminator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientOptions\n                                    \n                                \n                                \n                                    \n                                        clientOptions:     ConfigOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ConfigOptions\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Elasticsearch client options.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indexnameDeterminator\n                                    \n                                \n                                \n                                    \n                                        indexnameDeterminator:     MetricInfoDeterminator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MetricInfoDeterminator\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Used to get the name of the index.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                    \n                                \n                                \n                                    \n                                        log:     Logger\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Logger\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Logger instance used to report errors.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metricDocumentBuilder\n                                    \n                                \n                                \n                                    \n                                        metricDocumentBuilder:     MetricDocumentBuilder\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MetricDocumentBuilder\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Used to build the document for a metric.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeDeterminator\n                                    \n                                \n                                \n                                    \n                                        typeDeterminator:     MetricInfoDeterminator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MetricInfoDeterminator\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Used to get the type of the metric instance.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import \"source-map-support/register\";\n\nimport { Client, ConfigOptions } from \"elasticsearch\";\nimport {\n    Clock,\n    Counter,\n    Event,\n    Gauge,\n    Histogram,\n    Logger,\n    Meter,\n    Metric,\n    MetricRegistry,\n    MetricSetReportContext,\n    MetricType,\n    MILLISECOND,\n    MonotoneCounter,\n    OverallReportContext,\n    ReportingResult,\n    ScheduledMetricReporter,\n    ScheduledMetricReporterOptions,\n    Scheduler,\n    StdClock,\n    Tags,\n    Timer,\n    TimeUnit,\n} from \"inspector-metrics\";\n\n/**\n * Interface for getting a certain information using the specified emtric metadata -\n * e.g. name of the index, metric type, etc.\n */\nexport type MetricInfoDeterminator =\n    (registry: MetricRegistry, metric: Metric, type: MetricType, date: Date) => string;\n\n/**\n * Interface for building a document for a metric.\n */\nexport type MetricDocumentBuilder = (\n    registry: MetricRegistry,\n    metric: Metric,\n    type: MetricType,\n    date: Date,\n    tags: Tags) => {};\n\n/**\n * Options for {@link ElasticsearchMetricReporter}.\n *\n * @export\n * @interface ElasticsearchMetricReporterOption\n * @extends {ScheduledMetricReporterOptions}\n */\nexport interface ElasticsearchMetricReporterOption extends ScheduledMetricReporterOptions {\n    /**\n     * Elasticsearch client options.\n     *\n     * @type {ConfigOptions}\n     * @memberof ElasticsearchMetricReporterOption\n     */\n    readonly clientOptions: ConfigOptions;\n    /**\n     * Logger instance used to report errors.\n     *\n     * @type {Logger}\n     * @memberof ElasticsearchMetricReporterOption\n     */\n    log: Logger;\n    /**\n     * Used to get the name of the index.\n     *\n     * @type {MetricInfoDeterminator}\n     * @memberof ElasticsearchMetricReporterOption\n     */\n    readonly indexnameDeterminator: MetricInfoDeterminator;\n    /**\n     * Used to get the type of the metric instance.\n     *\n     * @type {MetricInfoDeterminator}\n     * @memberof ElasticsearchMetricReporterOption\n     */\n    readonly typeDeterminator: MetricInfoDeterminator;\n    /**\n     * Used to build the document for a metric.\n     *\n     * @type {MetricDocumentBuilder}\n     * @memberof ElasticsearchMetricReporterOption\n     */\n    readonly metricDocumentBuilder: MetricDocumentBuilder;\n}\n\n/**\n * A MetricReporter extension used to publish metric values to elasticsearch.\n *\n * @export\n * @class ElasticsearchMetricReporter\n * @extends {MetricReporter}\n */\nexport class ElasticsearchMetricReporter extends ScheduledMetricReporter> {\n\n    /**\n     * Returns a {@link MetricInfoDeterminator} that returns 'metric' as type.\n     *\n     * @static\n     * @returns {MetricInfoDeterminator}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public static defaultTypeDeterminator(): MetricInfoDeterminator {\n        return (registry: MetricRegistry, metric: Metric, type: MetricType, date: Date) => \"metric\";\n    }\n\n    /**\n     * Returns a {@link MetricInfoDeterminator} that returns an indexname like '-yyyy-mm-dd'.\n     *\n     * @static\n     * @param {string} baseName The\n     * @returns {MetricInfoDeterminator}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public static dailyIndex(baseName: string): MetricInfoDeterminator {\n        return (registry: MetricRegistry, metric: Metric, type: MetricType, date: Date) => {\n            const day = date.getDate();\n            const dayPrefix: string = (day >= 10) ? \"\" : \"0\";\n            const month = date.getMonth() + 1;\n            const monthPrefix: string = (month >= 10) ? \"\" : \"0\";\n            return `${baseName}-${date.getFullYear()}-${monthPrefix}${month}-${dayPrefix}${day}`;\n        };\n    }\n\n    /**\n     * Returns a {@link MetricDocumentBuilder} that builds an object for a metric like this:\n     *\n     * {\n     *\n     *  name: ..., // name of metric\n     *\n     *  group: ..., // group of metric\n     *\n     *  timestamp: ..., // timestamp from parameter\n     *\n     *  tags: ..., // combined tags from this reporter and the metric\n     *\n     *  values..., // metric specific values\n     *\n     *  type..., // metric type\n     *\n     * }\n     *\n     * @static\n     * @returns {MetricDocumentBuilder}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public static defaultDocumentBuilder(): MetricDocumentBuilder {\n        return (\n            registry: MetricRegistry,\n            metric: Metric,\n            type: MetricType,\n            timestamp: Date,\n            tags: Tags) => {\n\n            let values = null;\n\n            if (metric instanceof MonotoneCounter) {\n                values = ElasticsearchMetricReporter.getMonotoneCounterValues(metric);\n            } else if (metric instanceof Counter) {\n                values = ElasticsearchMetricReporter.getCounterValues(metric);\n            } else if (metric instanceof Histogram) {\n                values = ElasticsearchMetricReporter.getHistogramValues(metric);\n            } else if (metric instanceof Meter) {\n                values = ElasticsearchMetricReporter.getMeterValues(metric);\n            } else if (metric instanceof Timer) {\n                values = ElasticsearchMetricReporter.getTimerValues(metric);\n            } else {\n                values = ElasticsearchMetricReporter.getGaugeValue(metric as Gauge);\n            }\n\n            if (values === null) {\n                return null;\n            }\n\n            const name = metric.getName();\n            const group = metric.getGroup();\n            return { name, group, tags, timestamp, values, type };\n        };\n    }\n\n    /**\n     * Gets the values for the specified monotone counter metric.\n     *\n     * @static\n     * @param {MonotoneCounter} counter\n     * @returns {{}}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public static getMonotoneCounterValues(counter: MonotoneCounter): {} {\n        const count = counter.getCount();\n        if (!count || isNaN(count)) {\n            return null;\n        }\n        return { count };\n    }\n\n    /**\n     * Gets the values for the specified counter metric.\n     *\n     * @static\n     * @param {Counter} counter\n     * @returns {{}}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public static getCounterValues(counter: Counter): {} {\n        const count = counter.getCount();\n        if (!count || isNaN(count)) {\n            return null;\n        }\n        return { count };\n    }\n\n    /**\n     * Gets the values for the specified {Gauge} metric.\n     *\n     * @static\n     * @param {Gauge} gauge\n     * @returns {{}}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public static getGaugeValue(gauge: Gauge): {} {\n        const value = gauge.getValue();\n        if ((!value && value !== 0) || Number.isNaN(value)) {\n            return null;\n        }\n        if (typeof value === \"object\") {\n            return value;\n        }\n        return { value };\n    }\n\n    /**\n     * Gets the values for the specified {Histogram} metric.\n     *\n     * @static\n     * @param {Histogram} histogram\n     * @returns {{}}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public static getHistogramValues(histogram: Histogram): {} {\n        const value = histogram.getCount();\n        if (!value || isNaN(value)) {\n            return null;\n        }\n        const snapshot = histogram.getSnapshot();\n        const values: any = {};\n\n        values[`count`] = value;\n        values[`max`] = this.getNumber(snapshot.getMax());\n        values[`mean`] = this.getNumber(snapshot.getMean());\n        values[`min`] = this.getNumber(snapshot.getMin());\n        values[`p50`] = this.getNumber(snapshot.getMedian());\n        values[`p75`] = this.getNumber(snapshot.get75thPercentile());\n        values[`p95`] = this.getNumber(snapshot.get95thPercentile());\n        values[`p98`] = this.getNumber(snapshot.get98thPercentile());\n        values[`p99`] = this.getNumber(snapshot.get99thPercentile());\n        values[`p999`] = this.getNumber(snapshot.get999thPercentile());\n        values[`stddev`] = this.getNumber(snapshot.getStdDev());\n\n        return values;\n    }\n\n    /**\n     * Gets the values for the specified {Meter} metric.\n     *\n     * @static\n     * @param {Meter} meter\n     * @returns {{}}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public static getMeterValues(meter: Meter): {} {\n        const value = meter.getCount();\n        if (!value || isNaN(value)) {\n            return null;\n        }\n        const values: any = {};\n\n        values[`count`] = value;\n        values[`m15_rate`] = this.getNumber(meter.get15MinuteRate());\n        values[`m1_rate`] = this.getNumber(meter.get1MinuteRate());\n        values[`m5_rate`] = this.getNumber(meter.get5MinuteRate());\n        values[`mean_rate`] = this.getNumber(meter.getMeanRate());\n\n        return values;\n    }\n\n    /**\n     * Gets the values for the specified {Timer} metric.\n     *\n     * @static\n     * @param {Timer} timer\n     * @returns {{}}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public static getTimerValues(timer: Timer): {} {\n        const value = timer.getCount();\n        if (!value || isNaN(value)) {\n            return null;\n        }\n        const snapshot = timer.getSnapshot();\n        const values: any = {};\n\n        values[`count`] = value;\n        values[`m15_rate`] = this.getNumber(timer.get15MinuteRate());\n        values[`m1_rate`] = this.getNumber(timer.get1MinuteRate());\n        values[`m5_rate`] = this.getNumber(timer.get5MinuteRate());\n        values[`max`] = this.getNumber(snapshot.getMax());\n        values[`mean`] = this.getNumber(snapshot.getMean());\n        values[`mean_rate`] = this.getNumber(timer.getMeanRate());\n        values[`min`] = this.getNumber(snapshot.getMin());\n        values[`p50`] = this.getNumber(snapshot.getMedian());\n        values[`p75`] = this.getNumber(snapshot.get75thPercentile());\n        values[`p95`] = this.getNumber(snapshot.get95thPercentile());\n        values[`p98`] = this.getNumber(snapshot.get98thPercentile());\n        values[`p99`] = this.getNumber(snapshot.get99thPercentile());\n        values[`p999`] = this.getNumber(snapshot.get999thPercentile());\n        values[`stddev`] = this.getNumber(snapshot.getStdDev());\n\n        return values;\n    }\n\n    /**\n     * Either gets 0 or the specifed value.\n     *\n     * @private\n     * @param {number} value\n     * @returns {number}\n     * @memberof ElasticsearchMetricReporter\n     */\n    private static getNumber(value: number): number {\n        if (isNaN(value)) {\n            return 0;\n        }\n        return value;\n    }\n\n    /**\n     * Metadata for the logger.\n     *\n     * @private\n     * @type {*}\n     * @memberof ElasticsearchMetricReporter\n     */\n    private logMetadata: any;\n    /**\n     * Elasticsearch client used to do reporting.\n     *\n     * @private\n     * @type {Client}\n     * @memberof ElasticsearchMetricReporter\n     */\n    private client: Client;\n\n    /**\n     * Creates an instance of ElasticsearchMetricReporter.\n     */\n    public constructor(\n        {\n            clientOptions,\n            metricDocumentBuilder = ElasticsearchMetricReporter.defaultDocumentBuilder(),\n            indexnameDeterminator = ElasticsearchMetricReporter.dailyIndex(\"metric\"),\n            typeDeterminator = ElasticsearchMetricReporter.defaultTypeDeterminator(),\n            log = console,\n            reportInterval = 1000,\n            unit = MILLISECOND,\n            clock = new StdClock(),\n            scheduler = setInterval,\n            minReportingTimeout = 1,\n            tags = new Map(),\n        }: {\n                /**\n                 * Elasticsearch client options.\n                 * @type {ConfigOptions}\n                 */\n                clientOptions: ConfigOptions,\n                /**\n                 * Used to build the document for a metric.\n                 * @type {MetricDocumentBuilder}\n                 */\n                metricDocumentBuilder?: MetricDocumentBuilder,\n                /**\n                 * Used to get the name of the index.\n                 * @type {MetricInfoDeterminator}\n                 */\n                indexnameDeterminator?: MetricInfoDeterminator,\n                /**\n                 * Used to get the type of the metric instance.\n                 * @type {MetricInfoDeterminator}\n                 */\n                typeDeterminator?: MetricInfoDeterminator,\n                /**\n                 * The logger instance used to report metrics.\n                 * @type {Logger}\n                 */\n                log?: Logger,\n                /**\n                 * Reporting interval in the time-unit of {@link #unit}.\n                 * @type {number}\n                 */\n                reportInterval?: number;\n                /**\n                 * The time-unit of the reporting interval.\n                 * @type {TimeUnit}\n                 */\n                unit?: TimeUnit;\n                /**\n                 * The clock instance used determine the current time.\n                 * @type {Clock}\n                 */\n                clock?: Clock;\n                /**\n                 * The scheduler function used to trigger reporting.\n                 * @type {Scheduler}\n                 */\n                scheduler?: Scheduler;\n                /**\n                 * The timeout in which a metrics gets reported wether it's value has changed or not.\n                 * @type {number}\n                 */\n                minReportingTimeout?: number;\n                /**\n                 * Common tags for this reporter instance.\n                 * @type {Map}\n                 */\n                tags?: Map;\n            }) {\n        super({\n            clientOptions,\n            clock,\n            indexnameDeterminator,\n            log,\n            metricDocumentBuilder,\n            minReportingTimeout,\n            reportInterval,\n            scheduler,\n            tags,\n            typeDeterminator,\n            unit,\n        });\n\n        this.logMetadata = {\n            reportInterval,\n            tags,\n            unit,\n        };\n\n        this.client = new Client(clientOptions);\n    }\n\n    /**\n     * Gets the logger instance.\n     *\n     * @returns {Logger}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public getLog(): Logger {\n        return this.options.log;\n    }\n\n    /**\n     * Sets the logger instance.\n     *\n     * @param {Logger} log\n     * @memberof ElasticsearchMetricReporter\n     */\n    public setLog(log: Logger): void {\n        this.options.log = log;\n    }\n\n    /**\n     * Reports an {@link Event}.\n     *\n     * @param {Event} event\n     * @returns {Promise}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public async reportEvent>(event: TEvent): Promise {\n        const result = this.reportGauge(event, {\n            date: event.getTime(),\n            metrics: [],\n            overallCtx: null,\n            registry: null,\n            type: \"gauge\",\n        });\n\n        if (result) {\n            await this.handleResults(null, null, event.getTime(), \"gauge\", [{\n                metric: event,\n                result,\n            }]);\n        }\n\n        return event;\n    }\n\n    /**\n     * Does nothing\n     *\n     * @returns {Promise}\n     * @memberof ElasticsearchMetricReporter\n     */\n    public async flushEvents(): Promise {\n    }\n\n    /**\n     * Send the combinations of index and document to the elasticsearch cluster\n     * using the bulk method of the elasticsearch client.\n     *\n     * @protected\n     * @param {MetricRegistry} registry\n     * @param {Date} date\n     * @param {MetricType} type\n     * @param {Array>} results\n     * @returns {Promise}\n     * @memberof ElasticsearchMetricReporter\n     */\n    protected handleResults(\n        ctx: OverallReportContext,\n        registry: MetricRegistry,\n        date: Date,\n        type: MetricType,\n        results: Array>): Promise {\n        const body = results\n            .map((result) => result.result)\n            .reduce((p, c) => p.concat(c), []);\n\n        if (!body || body.length === 0) {\n            return Promise.resolve();\n        }\n\n        return this.client.bulk({ body })\n            .then((response) => {\n                if (this.options.log) {\n                    this.options.log.debug(\n                        `took ${response.took}ms to write ${type} metrics - errors ${response.errors}`,\n                        this.logMetadata,\n                    );\n                }\n            })\n            .catch((reason) => {\n                if (this.options.log) {\n                    this.options.log\n                        .error(`error writing ${type} metrics - reason: ${reason}`, reason, this.logMetadata);\n                }\n            });\n    }\n\n    /**\n     * Generalized reporting method of all types of metric instances.\n     * Builds the index configuration document and the metric document.\n     *\n     * @protected\n     * @param {Metric} metric\n     * @param {ReportingContext} ctx\n     * @returns {Array}\n     * @memberof ElasticsearchMetricReporter\n     */\n    protected reportMetric(\n        metric: Metric, ctx: MetricSetReportContext): Array {\n        const document = this.options.metricDocumentBuilder(\n            ctx.registry, metric, ctx.type, ctx.date, this.buildTags(ctx.registry, metric));\n        if (!!document) {\n            // tslint:disable-next-line:variable-name\n            const _index = this.options.indexnameDeterminator(ctx.registry, metric, ctx.type, ctx.date);\n            // tslint:disable-next-line:variable-name\n            const _type = this.options.typeDeterminator(ctx.registry, metric, ctx.type, ctx.date);\n            return [\n                { index: { _index, _type } },\n                document,\n            ];\n        }\n        return [];\n    }\n\n    /**\n     * Calls {@link #reportMetric} with the specified arguments.\n     *\n     * @protected\n     * @param {(MonotoneCounter | Counter)} counter\n     * @param {(ReportingContext)} ctx\n     * @returns {Array}\n     * @memberof ElasticsearchMetricReporter\n     */\n    protected reportCounter(\n        counter: MonotoneCounter | Counter, ctx: MetricSetReportContext): Array {\n        return this.reportMetric(counter, ctx);\n    }\n\n    /**\n     * Calls {@link #reportMetric} with the specified arguments.\n     *\n     * @protected\n     * @param {Gauge} gauge\n     * @param {ReportingContext>} ctx\n     * @returns {Array}\n     * @memberof ElasticsearchMetricReporter\n     */\n    protected reportGauge(gauge: Gauge, ctx: MetricSetReportContext>): Array {\n        return this.reportMetric(gauge, ctx);\n    }\n\n    /**\n     * Calls {@link #reportMetric} with the specified arguments.\n     *\n     * @protected\n     * @param {Histogram} histogram\n     * @param {ReportingContext} ctx\n     * @returns {Array}\n     * @memberof ElasticsearchMetricReporter\n     */\n    protected reportHistogram(histogram: Histogram, ctx: MetricSetReportContext): Array {\n        return this.reportMetric(histogram, ctx);\n    }\n\n    /**\n     * Calls {@link #reportMetric} with the specified arguments.\n     *\n     * @protected\n     * @param {Meter} meter\n     * @param {ReportingContext} ctx\n     * @returns {Array}\n     * @memberof ElasticsearchMetricReporter\n     */\n    protected reportMeter(meter: Meter, ctx: MetricSetReportContext): Array {\n        return this.reportMetric(meter, ctx);\n    }\n\n    /**\n     * Calls {@link #reportMetric} with the specified arguments.\n     *\n     * @protected\n     * @param {Timer} timer\n     * @param {ReportingContext} ctx\n     * @returns {Array}\n     * @memberof ElasticsearchMetricReporter\n     */\n    protected reportTimer(timer: Timer, ctx: MetricSetReportContext): Array {\n        return this.reportMetric(timer, ctx);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[Unreleased]\n[2.3.1] - 2019-02-08\nChanged\n\nuse inspector-metrics@1.17.2\nupdated dependencies\n\n[2.3.0] - 2018-12-01\nChanged\n\nupdated dependencies\n\n[2.2.0] - 2018-11-30\nChanged\n\ngauge values can be objects now and if so will be set directly to the resulting document's values property\n\n[2.1.1] - 2018-11-28\nChanged\n\nadded inspector-metrics@1.16.x as peer dependency\n\n[2.1.0] - 2018-11-27\nAdded\n\nsupport for reporting events\n\nChanged\n\nadded nodejs 11 to playground\nupdated dependencies\nuse inspector-metrics@1.16.0\nfixed examples in readme\nset version of transitive dependency event-stream to 3.3.4\n\n[2.0.0] - 2018-11-04\nAdded\n\nCHANGELOG\ncompile and test script for different node versions\n\nChanged\n\nadded nodejs 11 to travis.yml\nupdated dependencies\nuse inspector-metrics@1.13.0\nadapted new MetricLogger implementation\ncompile target from \"es2017\" to \"es6\"\n\n[1.1.0] - 2018-10-05\nAdded\n\nsupport for monotone counters\n\"description\" & \"homepage\" to package.json\njsdocs for components\n\nChanged\n\nfixed linting config\nrefactored playground\nupdated dependencies\nuse inspector-metrics@1.11.0\nrefactored build scripts\nuse compodoc as documentation tool\n\nRemoved\n\nJenkinsfile\n\n[1.0.1] - 2018-07-08\nChanged\n\nupdated dependencies\nuse inspector-metrics@1.8.7\nadded nodejs 10 to travis.yml\nrefactored playground\n\n[1.0.0] - 2018-02-08\nInitial commit.\nAdded\n\nproject setup\nREADME\ntypescript config\nlint config\n\n\nlicensed under MIT license\nbasic elasticsearch reporter\nmocha testing (with chai, sinon)\nJenkins pipeline\nNYC code-coverage config\nadded editorconfig file\ntravis.yml for nodejs 6, 7, 8, 9\nbasic playground setup\nuse inspector-metrics@1.8.3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/metrics/ElasticsearchMetricReporter.ts\n            \n            class\n            ElasticsearchMetricReporter\n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                lib/metrics/ElasticsearchMetricReporter.ts\n            \n            interface\n            ElasticsearchMetricReporterOption\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            elasticsearch : ^15.4.1\n        \n            inspector-metrics : ^1.17.2\n        \n            source-map-support : ^0.5.10\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            inspector-metrics : >=1.16.x\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ninspector-elasticsearch\nTypescript Metrics Reporter for\nelasticsearch.\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nThis library is made for inspector-metrics node module and\nis meant to be used with typescript / nodejs.It uses elasticsearch-js as elasticsearch client.\ninstall\nnpm install --save inspector-elasticsearch\nbasic usage\nimport { MetricRegistry } from \"inspector-metrics\";\nimport { ElasticsearchMetricReporter } from \"inspector-elasticsearch\";\nimport { ConfigOptions } from \"elasticsearch\";\n\nconst clientOptions: ConfigOptions = {\n    apiVersion: \"6.0\",\n    host: \"localhost:9200\",\n};\n// instance the elasticsearch reporter\nconst reporter: ElasticsearchMetricReporter = new ElasticsearchMetricReporter({\n    clientOptions,\n});\nconst registry: MetricRegistry = new MetricRegistry();\n\n// add the registry to the reporter\nreporter.addMetricRegistry(registry);\n// start reporting\nawait reporter.start();determine the indexname for a metric\nimport { MetricRegistry } from \"inspector-metrics\";\nimport {\n    ElasticsearchMetricReporter,\n    MetricInfoDeterminator\n} from \"inspector-elasticsearch\";\nimport { ConfigOptions } from \"elasticsearch\";\n\nconst clientOptions: ConfigOptions = { ... };\n// computes the name of the index using the timestamp of the metric\nconst indexnameDeterminator: MetricInfoDeterminator = (\n    registry: MetricRegistry,\n    metric: Metric,\n    type: MetricType,\n    date: Date) => {\n\n    const day = date.getDate();\n    const dayPrefix: string = (day >= 10) ? \"\" : \"0\";\n    const month = date.getMonth() + 1;\n    const monthPrefix: string = (month >= 10) ? \"\" : \"0\";\n    return `metrics-${date.getFullYear()}-${monthPrefix}${month}-${dayPrefix}${day}`;\n};\n// the indexname generator needs to be specified when instancing the reporter\nconst reporter: ElasticsearchMetricReporter = new ElasticsearchMetricReporter({\n    clientOptions,\n    indexnameDeterminator, \n});build a metric document\nimport { MetricRegistry, Tags } from \"inspector-metrics\";\nimport {\n    ElasticsearchMetricReporter,\n    MetricDocumentBuilder,\n    MetricType\n} from \"inspector-elasticsearch\";\nimport { ConfigOptions } from \"elasticsearch\";\n\nconst clientOptions: ConfigOptions = { ... };\n// only build documents for counter metrics\nconst metricDocumentBuilder: MetricDocumentBuilder = (\n    registry: MetricRegistry,\n    metric: Metric,\n    type: MetricType,\n    timestamp: Date,\n    commonTags: Tags) => {\n\n    if (metric instanceof Counter) {\n        const tags = commonTags;\n        const name = metric.getName();\n        const group = metric.getGroup();\n        return { name, group, tags, timestamp, values: { count: metric.getCount() }, type };\n\n    } else {\n        // null values will not be reported / published\n        return null;\n    }\n};\n\n// the document builder needs to be specified when instancing the reporter\nconst reporter: ElasticsearchMetricReporter = new ElasticsearchMetricReporter({\n    clientOptions,\n    metricDocumentBuilder,\n});dev\nusing the playground\nTo use the playground you need to have docker and docker-compose installed.\n# boots all services (elasticsearch / grafana) and provisions the example dashboard\ntest-env/boot.sh\n# running playground script\n./playground.shview data in grafana\n\nNavigate to http://localhost:3000\nNavigate to the example dashboard (upper left corner \"Home\"): \"Elasticsearch example dashboard\"\n\n\nview data in kibana\n\nNavigate to http://localhost:5601\nAdd a new index pattern like metric-*\nDiscover data\n\n\nlocal dev\ncompile & test with different nodejs versions\nbuild docker images:  \ndocker-compose buildrun tests:  \ndocker-compose run node6\ndocker-compose run node7\ndocker-compose run node8\ndocker-compose run node9\ndocker-compose run node10\ndocker-compose run node11License\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MetricDocumentBuilder   (lib/.../ElasticsearchMetricReporter.ts)\n                        \n                        \n                            MetricInfoDeterminator   (lib/.../ElasticsearchMetricReporter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/metrics/ElasticsearchMetricReporter.ts\n    \n    \n        \n            \n                \n                    \n                    MetricDocumentBuilder\n                \n            \n            \n                \n                    Interface for building a document for a metric.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MetricInfoDeterminator\n                \n            \n            \n                \n                    Interface for getting a certain information using the specified emtric metadata -\ne.g. name of the index, metric type, etc.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
